#include <iostream>

using Tdigit = char[6][5];
bool Check(Tdigit a, Tdigit b) {
  for (int i = 0; i < 6; i++) {
    for (int j = 0; j < 5; j++) {
      if ((a[i][j] == '.') and (b[i][j] == '#')) {
        return false;
      }
    }
  }
  return true;
}

int main() {
  Tdigit a[10];
  Tdigit b[4];
  int i, j, k;
  int ch = 0, cm = 0, hh, mm;
  char temp2;
  bool can[4][10];
  char arr[300]{'.', '.', '#', '#', '.', '.', '.', '.', '.', '#', '.', '.', '#', '#', '.', '.', '#', '#', '#', '#',
                '.', '#', '.', '.', '#', '.', '#', '#', '#', '#', '.', '.', '#', '#', '#', '.', '#', '#', '#', '#',
                '.', '.', '#', '#', '.', '.', '.', '#', '#', '.', '.', '#', '.', '.', '#', '.', '.', '.', '#', '#',
                '.', '#', '.', '.', '#', '.', '.', '.', '.', '#', '.', '#', '.', '.', '#', '.', '#', '.', '.', '.',
                '.', '#', '.', '.', '.', '.', '.', '.', '.', '#', '.', '#', '.', '.', '#', '.', '#', '.', '.', '#',
                '.', '#', '.', '.', '#', '.', '.', '#', '.', '#', '.', '.', '.', '.', '#', '.', '.', '.', '#', '.',
                '.', '#', '.', '.', '#', '.', '#', '#', '#', '.', '.', '#', '#', '#', '.', '.', '.', '.', '#', '.',
                '.', '.', '#', '#', '.', '.', '#', '.', '.', '#', '.', '#', '.', '.', '#', '.', '.', '.', '.', '#',
                '.', '.', '.', '#', '.', '.', '.', '.', '.', '#', '.', '#', '#', '#', '#', '.', '.', '.', '.', '#',
                '.', '#', '.', '.', '#', '.', '.', '#', '.', '.', '.', '#', '.', '.', '#', '.', '.', '#', '#', '#',
                '.', '#', '.', '.', '#', '.', '.', '.', '.', '#', '.', '.', '#', '.', '.', '.', '.', '.', '.', '#',
                '.', '.', '.', '.', '#', '.', '#', '.', '.', '#', '.', '#', '.', '.', '#', '.', '.', '#', '.', '.',
                '.', '#', '.', '.', '#', '.', '.', '.', '.', '#', '.', '.', '#', '#', '.', '.', '.', '.', '.', '#',
                '.', '#', '#', '#', '#', '.', '#', '#', '#', '.', '.', '.', '.', '.', '#', '.', '.', '#', '#', '.',
                '.', '.', '#', '#', '.', '.', '.', '#', '.', '.', '.', '.', '#', '#', '.', '.', '#', '#', '#', '.'};

  for (i = 0; i < 6; i++) {
    for (j = 0; j < 10; j++) {
      for (k = 0; k < 5; k++) {
        a[j][i][k] = arr[i * 50 + j * 5 + k];
      }
    }
    for (j = 0; j < 4; j++) {
      for (k = 0; k < 5; k++) {
        std::cin >> temp2;
        b[j][i][k] = temp2;
      }
    }
  }
  for (i = 0; i < 10; i++) {
    for (j = 0; j < 4; j++) {
      can[j][i] = Check(a[i], b[j]);
    }
  }
  for (i = 0; i < 24; i++) {
    if (can[0][i / 10] and can[1][i % 10]) {
      ch++;
      hh = i;
    }
  }
  for (i = 0; i < 60; i++) {
    if (can[2][i / 10] and can[3][i % 10]) {
      cm++;
      mm = i;
    }
  }
  if ((ch == 0) or (cm == 0)) {
    std::cout << "ERROR";
  } else if ((ch == 1) and (cm == 1)) {
    std::cout << hh / 10 << hh % 10 << ':' << mm / 10 << mm % 10;
  } else {
    std::cout << "AMBIGUITY";
  }
  return 0;
}
